My favourite small feature of the Lookup class is that doing a lookup by key for a non-existent key returns an empty IEnumerable<T>, not null. That means the following key doesn't need any null checks of ContainsKey calls, or anything.

var productsByCategory = products.ToLookup(p => p.Category);

var category = "anything I like";

// This is safe for ANY value of category
foreach (var product in productsByCategory[category])
{
Console.WriteLine("\t" + product);
}

// Or even...
Console.WriteLine(String.Join(", ", productsByCategory[category].Where(p => p.Value > 20));